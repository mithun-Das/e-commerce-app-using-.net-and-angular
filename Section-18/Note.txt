

--------------> Section-18: Part-208 -> Creating the order aggregate part 1 <---------------

-> Owned Entity
   We do not need to keep Id property in owned entity

-> Previously created Address entity is tightly bound to our identity.
   And remember, this one is in a separate context boundary 
   and is physically separated from our application in a different database.
   So Address entity created for Order will be owned by order.

-> Entity Framework needs a parameterless constructor.

-> ProductItemOrdered is just going to act as a snapshot of our order at the time or our product item at the time,
   it was placed just based on the fact that the product name might change, the product image might change,
   but we wouldn't want to change it as well inside our order.
   So we don't want to relation between our order and our product item.
   We're going to store the values as it was when it was ordered into our database.


--------------> Section-18: Part-210 -> Configuring the order entities <---------------

-> Future Task
	
	=> Learn more about Owned Entity
	   src: https://learn.microsoft.com/en-us/ef/core/modeling/owned-entities
	
	=> Learn more about OrderConfiguration and it's workflow


--------------> Section-18: Part-218 -> Implementing the Unit of work <---------------

-> Future Task***(very urgent)

	=> Understand Reflection
	=> Understand Activator class
	=> TypeOf
	=> Analyze the Unit Of Work Pattern after learning necessary topics


--------------> Section-18: Part-219 -> Updating the generic repository <---------------

-> None of these asynchronous methods and the reason for this is that we're not going to be directly
   adding these to the database when we use any of these methods are always saying to entityframework when
   we use these is we want to add this. So track it or we want to update this, So track it.
   And this is happening in memory. It's not happening SQLite or whatever database technology we're using.
   Our repository is not responsible for saving changes to the database. That is left to our units of work.


-> Why Attach
   https://www.udemy.com/course/learn-to-build-an-e-commerce-app-with-net-core-and-angular/learn/lecture/18138234#questions/13999912